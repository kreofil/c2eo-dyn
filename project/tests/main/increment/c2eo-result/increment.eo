+package c2eo.src.main.increment.increment
+alias c2eo.coperators.add
+alias c2eo.system.address
+alias c2eo.stdio.printf
+alias c2eo.system.ram
+alias c2eo.coperators.read-as-int64
+alias c2eo.coperators.write
+alias c2eo.coperators.write-as-int64

[args...] > global
  ram > global-ram
    2048
  memory > empty-global-position
  ram > return-ram
    2048
  memory > return-mem_size
  address > return
    return-ram
    0
  address > g-x
    global-ram
    0
  address > g-y
    global-ram
    8
  [param-start param-size] > main
    add > local-start
      param-start
      param-size
    add > empty-local-position
      local-start
      0
    seq > @
      write-as-int64
        g-x
        add
          1
          read-as-int64
            g-x
      printf
        "%d\n"
        read-as-int64
          g-x
      write-as-int64
        g-x
        add
          read-as-int64
            g-x
          1
      printf
        "%d\n"
        read-as-int64
          g-x
      write
        return
        0
      TRUE
  seq > @
    write
      g-x
      42
    write
      g-y
      0
    main
      16
      0
    TRUE
