+package c2eo.src.main.void.voidParam01
+alias c2eo.coperators.add
+alias c2eo.system.address
+alias c2eo.coperators.mul
+alias c2eo.stdio.printf
+alias c2eo.system.ram
+alias c2eo.coperators.read-as-float64
+alias c2eo.coperators.read-as-int64
+alias c2eo.coperators.write
+alias c2eo.coperators.write-as-int64

[args...] > global
  ram > global-ram
    2048
  memory > empty-global-position
  ram > return-ram
    2048
  memory > return-mem_size
  address > return
    return-ram
    0
  address > g-a
    global-ram
    0
  address > g-b
    global-ram
    8
  address > g-x
    global-ram
    16
  [param-start param-size] > f-fun
    add > local-start
      param-start
      param-size
    add > empty-local-position
      local-start
      0
    address > p-x
      global-ram
      add
        param-start
        0
    address > p-d
      global-ram
      add
        param-start
        8
    seq > @
      printf
        "%d\n"
        read-as-int64
          g-a
      write-as-int64
        g-a
        mul
          read-as-int64
            g-b
          5
      printf
        "%d\n"
        read-as-int64
          g-a
      TRUE
  [param-start param-size] > main
    add > local-start
      param-start
      param-size
    add > empty-local-position
      local-start
      0
    seq > @
      seq
        write
          address
            global-ram
            add
              empty-local-position
              0
          5
        write
          address
            global-ram
            add
              empty-local-position
              8
          read-as-float64
            g-x
        ^.f-fun
          empty-local-position
          16
        TRUE
      seq
        write
          address
            global-ram
            add
              empty-local-position
              0
          read-as-int64
            g-b
        write
          address
            global-ram
            add
              empty-local-position
              8
          2.500000
        ^.f-fun
          empty-local-position
          16
        TRUE
      TRUE
  seq > @
    write
      g-a
      6
    write
      g-b
      8
    write
      g-x
      1.500000
    main
      24
      0
    TRUE
